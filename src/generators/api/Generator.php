<?php
namespace dsj\gii\generators\api;

use yii\gii\CodeFile;
use yii\helpers\ArrayHelper;
use yii\helpers\StringHelper;

class Generator extends \yii\gii\Generator
{
    public $groupID;
    public $apiID;
    public $moduleClass;
    public $moduleID;
    public $moduleConfig;
    
    public function getName()
    {
        return "Api生成器";
    }

    public function getDescription()
    {
        return '此生成器帮助您快速生成一个模型的数据接口';
    }
    
    public function generate()
    {
        $this->moduleClass = $this->getModuleClass();
        $this->moduleID = $this->groupID;
        $controllerID = $this->getControllerID();

        $configArr = require_once \Yii::getAlias('@api').'/config/module.php';
        $configArr['modules'][$this->groupID] = [
            'class' => $this->moduleClass,
        ];
        
        $this->moduleConfig = $configArr;
        
        $files = [];
        $modulePath = $this->getModulePath();
        if (!file_exists($modulePath . '/' . StringHelper::basename($this->moduleClass) . '.php')){
            $files[] = new CodeFile(
                $modulePath . '/' . StringHelper::basename($this->moduleClass) . '.php',
                $this->render("module.php")
            );
        }
        $files[] = new CodeFile(
            $modulePath . '/controllers/' . $controllerID .'Controller.php',
            $this->render("controller.php")
        );

        $files[] = new CodeFile(
            \Yii::getAlias('@api').'/config/module.php',
            $this->render("config.php")
        );

        return $files;
    }

    public function rules()
    {
        return array_merge(parent::rules(), [
            [['groupID', 'apiID'], 'required'],
        ]);
    }

    public function attributeLabels()
    {
        return [
            'groupID' => '分组ID',
            'apiID' => '接口ID',
        ];
    }

    public function requiredTemplates()
    {
        return ['module.php', 'controller.php'];
    }

    protected function getModuleClass(){
        return "api\\modules\\" . $this->groupID . "\\Module";
    }

    public function getModulePath()
    {
        return \Yii::getAlias('@' . str_replace('\\', '/', substr($this->moduleClass, 0, strrpos($this->moduleClass, '\\'))));
    }
    
    public function getControllerID(){
        return ucfirst($this->apiID);
    }

    public function getControllerNamespace()
    {
        return substr($this->moduleClass, 0, strrpos($this->moduleClass, '\\')) . '\controllers';
    }
    
    public function successMessage()
    {
        $absoluteUrl = \Yii::$app->request->getAbsoluteUrl();
        $urlArr = explode('?',$absoluteUrl);
        $webUrl = $urlArr[0];
        $apiUrl = str_replace('backend','api',$webUrl) . '?r=' . ($this->groupID) . '/' . ArrayHelper::capitalSeg($this->apiID) . '/index';
        
        $output = <<<EOD
<p>Api生成成功!!!</p>
<p>访问地址为:$apiUrl</p>
EOD;

        return $output; // TODO: Change the autogenerated stub
    }


}